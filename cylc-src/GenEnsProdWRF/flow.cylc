#!jinja2
{################################################################################}
{# WRF CONFIGURATIONS #}
{################################################################################}
{# Define the name of case study #}
{% set CSE_NME = 'valid_date_2022-12-28T00' %}

{# Configuration name including tunable parameters #}
{% set CTR_FLWS = [ 'WRF_9_WestCoast' ] %}

{# Max number of sub-domain to be processed, 1-1 correspondence with CTR_FLWS #}
{% set MAX_DOMS = [ 1 ] %}

{# Define the min / max ensemble indices #}
{% set ENS_MIN = 0 %}
{% set ENS_MAX = 2 %}

{# Define the number of digits to pad ensemble indices #}
{% set ENS_PAD = 2 %}

{# Define ensemble index prefix #}
{% set ENS_PRFX = 'ens_' %}

{# Define control member index, not to be used in ensemble spread calculation, #}
{# defined as empty string if not necessary #}
{% set CTR_MEM = '00' %}

{# Require all ensemble members, no missing files, TRUE or FALSE #}
{% set FULL_DATA = 'TRUE' %}

{################################################################################}
{# CYCLING SETTINGS #}
{################################################################################}
{# First initial time for a forecast YYYY-MM-DDTHH #}
{% set CYC_STRT = '2022-12-23T00' %}

{# Last initial time for a forecast YYYY-MM-DDTHH #}
{% set CYC_STOP = '2022-12-23T00' %}

{# Interval between cycle start times hours INT #}
{% set CYC_INC = 24 %}

{# OPTIONAL ARGUMENT to set a verification termination date -- processing #}
{# forecasts stops automatically at this valid date, blank string if unused #}
{% set EXP_VRF = '2022-12-28T00' %}

{################################################################################}
{# GENENSPROD PRECIP SETTINGS #}
{################################################################################}
{# Compute precip ensemble products, TRUE or FALSE #}
{% set PCP_PRD = 'TRUE' %}

{# LIST of thresholds levels for ensemble prod (NEEDS INTERNAL QUOTES "")#}
{% set PCP_THR = '"[ >=1.0, >=10.0, >=25.0, >=50.0, >=100.0 ]"' %}

{# Precip neighborhood widths, in interpolated ~4km intermediate grid points #}
{% set PCP_NBRHD = 9 %}

{# Define min / max forecast hours for precip analysis #}
{% set PCP_ANL_MIN = 24 %}
{% set PCP_ANL_MAX = 120 %}

{# Define the increment at which to generate precip analysis (HH) #}
{% set PCP_ANL_INC = 24%}

{# Define the min / max accumulation interval for precip #}
{% set ACC_MIN = 24 %}
{% set ACC_MAX = 72 %}

{# Define the increment between min / max accumulations #}
{% set ACC_INC = 24 %}

{################################################################################}
{# GENENSPROD IVT SETTINGS #}
{################################################################################}
{# Compute IVT ensemble products, TRUE or FALSE #}
{% set IVT_PRD = 'TRUE' %}

{# LIST of thresholds levels for ensemble prod (NEEDS INTERNAL QUOTES "")#}
{% set IVT_THR = '"[ >=250.0, >=500.0, >=750.0, >=1000.0, >=1250.0 ]"' %} 

{# IVT neighborhood widths, in interpolated ~4km intermediate grid points #}
{% set IVT_NBRHD = 17 %}

{# Define min / max forecast hours for IVT analysis #}
{% set IVT_ANL_MIN = 6 %}
{% set IVT_ANL_MAX = 120 %}

{# Define the increment at which to generate precip analysis (HH) #}
{% set IVT_ANL_INC = 6%}

{# Define the min / max hours of forecast averages #}
{% set AVG_MIN = 0 %}
{% set AVG_MAX = 6 %}

{# Define the increment between min / max of averages #}
{% set AVG_INC = 6 %}

{################################################################################}
{# JOB SETTINGS #}
{################################################################################}
{# Job mem argument #}
{% set ENS_PROC = 128 %}

{# Job mem argument #}
{% set ENS_MEM = '249208M' %}

{# Wallclock limit for ungrib jobs #}
{% set ENS_WC = 'PT2H30M' %}

{################################################################################}
{# CYLC SETTINGS #}
{################################################################################}
{# Construct iterables for loop over precip / IVT #}
{% set ANLS = [PCP_PRD, IVT_PRD] %}
{% set FLDS = ['QPF', 'IVT'] %}
{% set THRS = [PCP_THR, IVT_THR] %}
{% set ANL_MINS = [PCP_ANL_MIN, IVT_ANL_MIN] %}
{% set ANL_MAXS = [PCP_ANL_MAX, IVT_ANL_MAX] %}
{% set ANL_INCS = [PCP_ANL_INC, IVT_ANL_INC] %}
{% set INT_MINS = [ACC_MIN, AVG_MIN] %}
{% set INT_MAXS = [ACC_MAX, AVG_MAX] %}
{% set INT_INCS = [ACC_INC, AVG_INC] %}
{% set NBRHDS = [PCP_NBRHD, IVT_NBRHD] %}

[scheduler]
    UTC mode = True
    allow implicit tasks = True
[scheduling]
    initial cycle point = {{CYC_STRT}}
    final cycle point = {{CYC_STOP}}
    [[graph]]
        PT{{CYC_INC}}H = """
        {# Loop analyses #}
        {% for anl in ANLS %}
            {% if anl == 'TRUE' %}
                {% set fld = FLDS[loop.index0] %}
                {# Loop model control flows #}
                {% for ctr_flw in CTR_FLWS %}
                    {# inherit the max domain to process from 1-1 correspondence #}
                    {% set max_dom = MAX_DOMS[loop.index0] %}
                    {# loop sub-domains to process #}
                    {% for dom in range(0,max_dom) %}
                        {% set grd = loop.index | pad(2, '0') %}
                        {% set grd = ['d', grd] | join %}
                        GenEnsProd_{{ctr_flw}}_{{grd}}_{{fld}}
                    {% endfor %}
                {% endfor %}
            {% endif %}
        {% endfor %}
        """

[runtime]
    [[root]]
        platform = {{environ['SCHED']}}
        [[[environment]]]
            OMP_NUM_THREADS = {{ENS_PROC}}
            FULL_DATA = {{FULL_DATA}}
            CYC_DT = $(isodatetime ${CYLC_TASK_CYCLE_POINT} --f '%Y%m%d%H')
            {% if EXP_VRF == '' %}
                EXP_VRF = {{EXP_VRF}}
            {% else %}
                EXP_VRF = $(isodatetime {{EXP_VRF}} --f '%Y%m%d%H')
            {% endif %}
            ENS_MIN = {{ENS_MIN}}
            ENS_MAX = {{ENS_MAX}}
            ENS_PRFX = {{ENS_PRFX}}
            ENS_PAD = {{ENS_PAD}}
            CTR_MEM = {{CTR_MEM}}

    {# Loop analyses #}
    {% for anl in ANLS %}
        {% if anl == 'TRUE' %}
            {% set fld = FLDS[loop.index0] %}
            {% set thr = THRS[loop.index0] %}
            {% set anl_min = ANL_MINS[loop.index0] %}
            {% set anl_max = ANL_MAXS[loop.index0] %}
            {% set anl_inc = ANL_INCS[loop.index0] %}
            {% set int_min = INT_MINS[loop.index0] %}
            {% set int_max = INT_MAXS[loop.index0] %}
            {% set int_inc = INT_INCS[loop.index0] %}
            {% set nbrhd = NBRHDS[loop.index0] %}
            {# Loop model control flows #}
            {% for ctr_flw in CTR_FLWS %}
                {# inherit the max domain to process from 1-1 correspondence #}
                {% set max_dom = MAX_DOMS[loop.index0] %}
                {# loop sub-domains to process #}
                {% for dom in range(0,max_dom) %}
                    {% set grd = loop.index | pad(2, '0') %}
                    {% set grd = ['d', grd] | join %}
                    [[GenEnsProd_{{ctr_flw}}_{{grd}}_{{fld}}]]
                        execution time limit = {{ENS_WC}}
                        script = {{environ['DRIVERS']}}/GenEnsProd.sh
                        execution retry delays = 3*PT5M
                        [[[environment]]]
                            {# Set the analysis hours depending on field #}
                            ANL_MIN = {{anl_min}}
                            ANL_MAX = {{anl_max}}
                            ANL_INC = {{anl_inc}}
                            {# Set the time interval bounds depending on the field #}
                            INT_MIN = {{int_min}}
                            INT_MAX = {{int_max}}
                            INT_INC = {{int_inc}}
                            MOD_FLD = {{fld}}
                            CAT_THR = {{thr}}
                            CTR_FLW = {{ctr_flw}}
                            NBRHD_WDTH = {{nbrhd}}
                            IN_DIR = {{environ['VRF_ROOT']}}/{{CSE_NME}}/{{ctr_flw}}/Preprocess/$CYC_DT
                            {# WRF workflow outputs are nested relative to ISO/mem_id by domain #}
                            IN_DT_SUBDIR = {{grd}}
                            WRK_DIR = {{environ['VRF_ROOT']}}/{{CSE_NME}}/{{ctr_flw}}/GenEnsProd/$CYC_DT
                            OUT_DT_SUBDIR = '{{grd}}/{{fld}}'
                        [[[directives]]]
                            {% if environ['SCHED'] == 'slurm' %}
                                {% if environ['SYS_TYPE' ] == 'penguin' %}
                                    --partition = general
                                    --qos = {{environ['PART_DBG']}}
                                    --nodes = 1
                                    --ntasks-per-node = {{ENS_PROC}}
                                {% else %}
                                    --partition = {{environ['PART_DBG']}}
                                    --nodes = 1
                                    --ntasks-per-node = {{ENS_PROC}}
                                    --mem = {{ENS_MEM}}
                                {% endif %}
                            {% elif environ['SCHED'] == 'pbs' %}
                                -q = {{environ['PART_DBG']}}
                                -l select=1:mpiprocs={{ENS_PROC}}:ncpus=1
                            {% endif %}
                {% endfor %}
            {% endfor %}
        {% endif %}
    {% endfor %}
