#!jinja2
##################################################################################
# WRF CONFIGURATIONS
##################################################################################
# Define the name of case study
{% set CSE_NME = 'valid_date_2022-12-28T00' %}

# Configuration name including tunable parameters
{% set CTR_FLWS = 'WRF_9-3_WestCoast', 'WRF_9_WestCoast' %}

# Max number of sub-domain to be processed, 1-1 correspondence with CTR_FLWS
{% set MAX_DOMS = '2', '1' %}

# Define the ensemble size
{% set ENS_MAX = 1 %}

##################################################################################
# CYCLING SETTINGS
##################################################################################
# First initial time for a forecast YYYY-MM-DDTHH
{% set CYC_STRT = '2022-12-23T00' %}

# Last initial time for a forecast YYYY-MM-DDTHH
{% set CYC_STOP = '2022-12-27T00' %}

# Interval between cycle start times PTXXH
{% set CYC_INC = 'PT24H' %}

# OPTIONAL ARGUMENT to set a verification termination date -- preprocessing will
# stop automatically at this valid date, comment out this expression if not needed
{% set EXP_VRF = '2022-12-28T00' %}

# Define min / max forecast hours for cf outputs to be generated
{% set ANL_MIN = '0' %}
{% set ANL_MAX = '120' %}

# Define the increment at which to generate cf outputs (HH)
{% set ANL_INC = '24' %}

# Regrid to generic lat-lon for MET if native grid errors (TRUE or FALSE)
{% set RGRD = 'TRUE' %}

# Compute precipitation accumulations from cf files, TRUE or FALSE
{% set CMP_ACC = 'TRUE' %}

# Defines the min / max accumulation interval for precip
{% set ACC_MIN = '24' %}
{% set ACC_MAX = '72' %}

# Defines the increment between min / max to compute accumulation intervals
{% set ACC_INC = '24' %}

# Defines the offset to the initialization time in HH
# Use to correct for the offset in start time / forecast hour due to a restart run
# Needed for ingesting NetCDF meta-data in MET correctly
{% set INIT_OFFSET = '0' %}

##################################################################################
##################################################################################
# Output interval for history files in HH, suppressed = 00
{% set HIST_INT = '03' %}

# root directory for cycle time (YYYYMMDDHH) directories of WRF output files
export IN_ROOT=${SIM_ROOT}/${CSE}

# root directory for cycle time (YYYYMMDDHH) directories of cf-compliant outputs
export OUT_ROOT=${VRF_ROOT}/${CSE}

# WE NEED TO REDFINE THIS ENTIRELY TO HANDLE THE I/O DIRECTLY WITH CYLC
in_dir=${IN_DT_ROOT}/${CYC_DT}/${IN_DT_SUBDIR}
wrk_dir=${OUT_DT_ROOT}/${CYC_DT}/${OUT_DT_SUBDIR}
scrpt_dir=${HOME}/src/utilities

##################################################################################
# JOB SETTINGS
##################################################################################
# ungrib mem argument
{% set GRIB_MEM = '20000M' %}

# Wallclock limit for ungrib jobs
{% set GRIB_WC = 'PT30M' %}

##################################################################################
# CYLC SETTINGS
##################################################################################
[scheduler]
    UTC mode = True
    allow implicit tasks = True
[scheduling]
    initial cycle point = {{CYC_STRT}}
    final cycle point = {{CYC_STOP}}
    [[graph]]
        # Loop model control flows
        {% for ctr_flw in CTR_FLWS %}
            # inherit the max domain to process from 1-1 correspondence
            {% set max_dom = MAX_DOMS[loop.index0] %}
            {{CYC_INC}} = """
            # loop ensemble members to process
            {% for mem in range(0,ENS_MAX) %}
                {% set idx = mem | pad(2, '0') %}
                # loop sub-domains to process
                {% for dom in range(0,max_dom) %}
                    {% set grd = ['d', loop.index] | join %}
                    preprocess_{{ctr_flw}}_ens_{{idx}}_{{grd}}
                {% endfor %}
            {% endfor %}
        {% endfor %}
        """

[runtime]
    [[root]]
        [[[environment]]]
            CNST = {{environ['DRIVERS']}}/CONSTANTS.sh
            EXP_NME = {{EXP_NME}}
            EXP_VRF = $(isodatetime {{EXP_VRF}} --f '%Y%m%d%H')
            CYC_DT = $(isodatetime ${CYLC_TASK_CYCLE_POINT} --f '%Y%m%d%H')
            STRT_DT = $CYC_DT

    {% for ctr_flw in CTR_FLWS %}
        {% for mem in range(0,ENS_MAX) %}
            {% set idx = mem | pad(2, '0') %}
            [[preprocessWRF_ens_{{idx}}]]
                platform = {{environ['SCHED']}}
                execution time limit = {{GRIB_WC}}
                script = {{environ['DRIVERS']}}/run_preprocessWRF.sh
                execution retry delays = 3*PT5M
                [[[environment]]]
                    MEMID = {{idx}}
                    GRIB_ROOT = {{environ['GRIB_ROOT']}}
                    BKG_STRT_DT = $CYC_DT
                    IF_SST_UPDT = {{IF_SST_UPDT}}
                    BKG_DATA = {{ENS_BKG_DATA}}
                    BKG_INT = {{ENS_BKG_INT}}
                    IF_ECMWF_ML = 'No'
                [[[directives]]]
                    {% if environ['SCHED'] == 'slurm' %}
                        {% if environ['SYS_TYPE' ] == 'penguin' %}
                            --partition = general
                            --qos = {{environ['PART_SRL']}}
                            --nodes = 1
                            --ntasks-per-node = 1
                        {% else %}
                            --partition = {{environ['PART_SRL']}}
                            --nodes = 1
                            --ntasks-per-node = 1
                            --mem = {{GRIB_MEM}}
                        {% endif %}
                    {% elif environ['SCHED'] == 'pbs' %}
                        -q = {{environ['PART_SRL']}}
                        -l select=1:mpiprocs=1:ncpus=1
                    {% endif %}
        {% endfor %}
    {% endfor %}
for (( i_f = 0; i_f < ${num_flws}; i_f++ )); do
  for (( i_m = 0; i_m < ${num_mems}; i_m++ )); do
    for (( i_g = 0; i_g < ${num_grds}; i_g++ )); do
      CTR_FLW=${CTR_FLWS[$i_f]}
      GRD=${GRDS[$i_g]}
      MEM=${MEM_IDS[$i_m]}

      cmd="${cfg_indx}+=(\"CTR_FLW=${CTR_FLW}\")"

      cmd="${cfg_indx}+=(\"GRD=${GRD}\")"

      cmd="${cfg_indx}+=(\"IN_DT_ROOT=${IN_ROOT}/${CTR_FLW}\")"
      cmd="${cfg_indx}+=(\"IN_DT_SUBDIR=/wrf/${MEM}\")"

      cmd="${cfg_indx}+=(\"OUT_DT_ROOT=${OUT_ROOT}/${CTR_FLW}/Preprocess\")"
      cmd="${cfg_indx}+=(\"OUT_DT_SUBDIR=/${MEM}/${GRD}\")"
